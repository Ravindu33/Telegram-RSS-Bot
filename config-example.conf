#  Telegram-RSS-Bot
#  wrote by BSimjoo https://github.com/bsimjoo/Telegram-RSS-Bot
[main]
#  in telegram use @botfather to create a bot and then paste token here
token = your bot token

#  Working behind a proxy. you can use SOCKS or HTTP proxies.
#  username and password is optional, if you need authentication.
#  
#  use-proxy = true
#
#  http proxy: 
#  proxy-url = http://USERNAME:PASSWORD@PROXY_HOST:PROXY_PORT/
#
#  SOCKS5 proxy:
#  proxy-url = socks5h://URL_OF_THE_PROXY_SERVER:PROXY_PORT
#  proxy-user = USERNAME
#  proxy-pass = PASSWORD
#
#  if you want to use socks5 I recommend you to start proxy-url with `socks5h` instead of `socks5`

source = https://pcworms.blog.ir/rss/
language = en-us
strings-file = Default-strings.json
log-level = info

#  [CRITICAL] specify path of file based database
db-path = db.lmdb

#  uncomment to save logs to file instead of console output
#log-file = log.log

#----- Bug reporter configurations -----

#  bug reporter modes: 
#    off      Disable bug-reporter
#    offline  Saves bugs in bugs-file
#    online   Saves bugs in file and also runs a http server, you can configure
#             HTTP-server (using cherrypy) in [bug-reporter] section
#  if you're going to run bug-reporter in online mode, make sure you have cherrypy installed
#  or use "python3 -m pip install cherrypy" to install it

bug-reporter = off

#  check below configurations if bug reporter is not off

#  Specify cherrypy config file if running bugreporter in online mode
#reporter-config-file = Bug-reporter.conf

bugs-file = ./bugs.json
use-git = false

#  use below configuration if using git

#  if your git executable is not in environment path variable so uncomment and change line below:
#git-path = /usr/bin/git

#  Bug reporter can reach repository url automatically but you can set a custom.
#  this url will use in a fast link to where bug found (exception raisen)
#git-source = https://github.com/bsimjoo/Telegram-RSS-Bot